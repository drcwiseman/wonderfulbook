Build a secure, elegant, Apple Books-style PDF reader interface inside the existing frontend of Wonderful Books.

This PDF reader must stream PDF files securely using the Express backend, enforce subscription access control, and deliver a polished reading experience similar to Apple Books.

üîê Backend PDF Endpoint (Already Prepared)
Use the existing secure route provided by the backend:

bash
Copy
Edit
GET /api/stream/:bookId
This endpoint:

Requires Replit Auth

Validates user's plan vs. book tier

Streams PDF content securely from the server

Never exposes direct file URLs

üìñ Build the Reader Page (React + TypeScript)
Create a new route/page: /read/:bookId
Create the following components:

bash
Copy
Edit
/src/pages/ReaderPage.tsx
/src/components/PDFViewer.tsx
/src/components/BookmarkPanel.tsx
üìö Required Features (Replicating Apple Books)
1. Fullscreen PDF Viewer
Use @react-pdf-viewer/core or react-pdf

Load PDF from /api/stream/:bookId using an authenticated request

Smooth, responsive layout

Vertical scrolling or page-by-page mode

Show current page number out of total

2. Navigation Controls
Next / Previous page buttons

‚ÄúGo to Page‚Äù input

Zoom in / out

Scroll mode vs. single-page mode (optional)

3. Bookmark Support
"Add Bookmark" button

Sidebar to view saved bookmarks (with page numbers)

POST /api/bookmarks to save bookmark: { userId, bookId, pageNumber }

GET /api/bookmarks/:bookId to load bookmarks

4. Reading Progress Tracking
Detect page change events

POST /api/progress with { bookId, pageNumber }

GET /api/progress/:bookId to resume reading

5. Reader UI Aesthetic
Apple Books-style white space, clean margins

Floating toolbar on top/bottom

Use Tailwind + Shadcn UI for layout

Framer Motion for transitions

Light/dark mode support (optional)

üõ°Ô∏è Security Requirements
DO NOT expose direct file URLs

Disable:

Download

Print

Right-click (context menu)

Text copy/paste (as much as possible)

Ensure PDF is only streamed through /api/stream/:bookId with proper access validation

‚úÖ Final Output
When this prompt is completed, the following should be live and tested:

PDF Reader available at /read/:bookId

Loads and streams PDF via secure backend

Page navigation, bookmarks, and resume tracking work smoothly

Reader layout mirrors Apple Books in UX quality and responsiveness

No download or bypass is possible

